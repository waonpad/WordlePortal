name: Push ECR

on:
  push:
    branches: [ main ]

jobs:

  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_NGINX_REPOSITORY: ${{ secrets.AWS_ECR_NGINX_REPO_NAME }}
          ECR_PHP_REPOSITORY: ${{ secrets.AWS_ECR_PHP_REPO_NAME }}
          ECR_DATABASE_REPOSITORY: ${{ secrets.AWS_ECR_DATABASE_REPO_NAME }}
        run: |
          docker build -t $ECR_NGINX_REPOSITORY/$ECR_REPOSITORY:latest -f ./docker/nginx/Dockerfile .
          docker push $ECR_NGINX_REPOSITORY/$ECR_REPOSITORY:latest
          docker build -t $ECR_PHP_REPOSITORY/$ECR_REPOSITORY:latest -f ./docker/php/Dockerfile .
          docker push $ECR_PHP_REPOSITORY/$ECR_REPOSITORY:latest
          docker build -t $ECR_DATABASE_REPOSITORY/$ECR_REPOSITORY:latest -f ./docker/mysql/Dockerfile .
          docker push $ECR_DATABASE_REPOSITORY/$ECR_REPOSITORY:latest
